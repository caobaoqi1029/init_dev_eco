import{_ as l,c as i,o,a4 as e}from"./chunks/framework.BwQg4lP7.js";const h=JSON.parse('{"title":"Ikun Music","description":"","frontmatter":{},"headers":[],"relativePath":"music/show.md","filePath":"music/show.md"}'),t={name:"music/show.md"},c=e('<h1 id="ikun-music" tabindex="-1">Ikun Music <a class="header-anchor" href="#ikun-music" aria-label="Permalink to &quot;Ikun Music&quot;">​</a></h1><h1 id="info" tabindex="-1">INFO <a class="header-anchor" href="#info" aria-label="Permalink to &quot;INFO&quot;">​</a></h1><table><thead><tr><th>学号</th><th>职责</th></tr></thead><tbody><tr><td>曹宝琪 2309312102</td><td>小黑子组长，负责项目管理任务分配，项目打包，文档撰写等工作</td></tr><tr><td>曹蓓 2309312103</td><td>dev，负责动态页面的代码实现</td></tr><tr><td>王文照 2309312121</td><td>小黑子</td></tr><tr><td>程柄惠</td><td>dev，负责发现页面代码实现</td></tr><tr><td>宋文杰</td><td>小黑子</td></tr></tbody></table><p>项目亮点：</p><ul><li>使用 RDB 操作数据库</li><li>侧滑删除 music 、自定义播放控件 （可用于控制歌曲前进 | 后退）</li><li>使用 git 协同开发、通过 vitePress 撰写文档更友好</li></ul><h1 id="一、整体结构" tabindex="-1">一、整体结构 <a class="header-anchor" href="#一、整体结构" aria-label="Permalink to &quot;一、整体结构&quot;">​</a></h1><p>项目大致分为以下几个页面：</p><ul><li>推荐页面：展示分类信息</li><li>发现页面：用于随机音乐推荐 （Random 待实现）</li><li>音乐页面：主要用于听音乐</li><li>动态页面：用于展示相关歌曲的评论以及转发点赞等信息</li></ul><h1 id="二、页面" tabindex="-1">二、页面 <a class="header-anchor" href="#二、页面" aria-label="Permalink to &quot;二、页面&quot;">​</a></h1><h2 id="_2-1-推荐页面" tabindex="-1">2.1 推荐页面 <a class="header-anchor" href="#_2-1-推荐页面" aria-label="Permalink to &quot;2.1 推荐页面&quot;">​</a></h2><p><code>RecommendPage</code> 是一个用于展示音乐推荐内容的页面组件。它包含了搜索区域、轮播图、每日推荐和推荐歌单等模块。</p><ol><li><strong>搜索区域 (<code>searchBuilder</code>)</strong><ul><li>使用 <code>Row</code> 布局，包含一个搜索图标、文本和一个二维码图标。</li><li>设置背景颜色、边框半径和内边距，以美化界面。</li></ul></li><li><strong>轮播图 (<code>swiperBuilder</code>)</strong><ul><li>使用 <code>Swiper</code> 组件和 <code>ForEach</code> 循环来展示多张图片。</li><li>设置轮播图的自动播放、循环、间隔时间和指示器样式。</li></ul></li><li><strong>每日推荐 (<code>titleBuilder</code> 和 <code>recommendBuilder</code>)</strong><ul><li>使用 <code>titleBuilder</code> 构建标题栏，显示“每日推荐”和“更多...”。</li><li>使用 <code>recommendBuilder</code> 展示每日推荐的音乐列表，每项包含类型、图片和标题。</li><li>使用 <code>Column</code> 和 <code>Row</code> 布局，以及 <code>ForEach</code> 循环来动态生成内容。</li></ul></li><li><strong>推荐歌单 (<code>titleBuilder</code> 和 <code>musicBuider</code>)</strong><ul><li>再次使用 <code>titleBuilder</code> 构建标题栏，显示“推荐歌单”和“更多...”。</li><li>使用 <code>musicBuider</code> 展示推荐歌单，每项包含图片、播放次数和标题。</li><li>使用 <code>Stack</code> 布局来叠加图片和播放次数，以及 <code>Column</code> 和 <code>Row</code> 布局来组织内容。</li></ul></li></ol><p><img src="https://2024-cbq-1311841992.cos.ap-beijing.myqcloud.com/picgo/image-20240607112315754.png" alt="image-20240607112315754"></p><h2 id="_2-2-发现页面" tabindex="-1">2.2 发现页面 <a class="header-anchor" href="#_2-2-发现页面" aria-label="Permalink to &quot;2.2 发现页面&quot;">​</a></h2><p><code>FindPage</code> 是一个用于展示音乐列表并提供播放功能的页面组件。它通过与数据库交互获取音乐列表，并使用 <code>AvPlayerManager</code> 来控制音乐的播放和暂停。</p><ol><li><strong>初始化 (<code>aboutToAppear</code>)</strong><ul><li>从数据库中获取音乐列表。</li><li>初始化 <code>AvPlayerManager</code>，并监听音乐播放的时长和总时长。</li></ul></li><li><strong>音乐列表 (<code>maybeLikeListBuilder</code>)</strong><ul><li>使用 <code>List</code> 和 <code>ListItem</code> 组件展示音乐列表。</li><li>每个列表项包含音乐封面、音乐名称、作者和播放/暂停按钮。</li><li>根据当前播放状态显示不同的播放按钮（播放或暂停）。</li><li>支持侧滑操作，侧滑后可以删除音乐。</li></ul></li><li><strong>播放控制</strong><ul><li>通过点击播放按钮触发音乐播放，并更新当前播放的音乐和索引。</li><li>提供暂停功能，通过点击暂停按钮暂停当前播放的音乐。</li></ul></li><li><strong>状态管理</strong><ul><li>使用 <code>@State</code> 装饰器管理播放状态 (<code>isPlaying</code>)、当前播放索引 (<code>currentIndex</code>)、当前播放音乐 (<code>currentMusic</code>)、总时长 (<code>totalTime</code>) 和当前播放时长 (<code>currentTime</code>)。</li></ul></li></ol><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p></p><p>关键特性：</p><ul><li><strong>动态内容生成</strong>：使用 <code>ForEach</code> 循环从数据库中动态生成音乐列表。</li><li><strong>交互性</strong>：提供播放、暂停和删除音乐的功能。</li><li><strong>状态同步</strong>：实时更新播放状态和播放时长，确保用户界面与音乐播放状态同步。</li></ul></div><p><img src="https://2024-cbq-1311841992.cos.ap-beijing.myqcloud.com/picgo/image-20240607112420953.png" alt="image-20240607112420953"></p><div class="caution custom-block github-alert"><p class="custom-block-title">CAUTION</p><p></p><ul><li>使用 RDB 存储操作数据</li><li>侧滑删除</li></ul></div><h2 id="_2-3-音乐页面" tabindex="-1">2.3 音乐页面 <a class="header-anchor" href="#_2-3-音乐页面" aria-label="Permalink to &quot;2.3 音乐页面&quot;">​</a></h2><p><code>MusicPage</code> 是一个用于展示音乐播放列表和控制音乐播放的页面组件。它提供了音乐列表的展示、音乐播放控制、播放进度显示以及播放列表的切换功能。</p><ol><li><strong>初始化 (<code>aboutToAppear</code>)</strong><ul><li>初始化 <code>AvPlayerManager</code>，并监听音乐播放的时长和总时长。</li></ul></li><li><strong>音乐播放控制 (<code>MusicPlayBuilder</code>)</strong><ul><li>显示当前播放的音乐名称和作者。</li><li>使用 <code>Image</code> 组件展示唱片封面，并添加旋转动画。</li><li>使用 <code>Slider</code> 组件显示和控制播放进度，支持用户拖动滑块调整播放位置。</li></ul></li><li><strong>音乐列表 (<code>musicListBuilder</code>)</strong><ul><li>使用 <code>List</code> 和 <code>ListItem</code> 组件展示音乐列表。</li><li>每个列表项包含音乐封面、音乐名称、作者和播放/暂停按钮。</li><li>根据当前播放状态显示不同的播放按钮（播放或暂停）。</li><li>支持侧滑操作，侧滑后可以删除音乐。</li></ul></li><li><strong>播放列表切换</strong><ul><li>提供左右切换按钮，允许用户切换到上一首或下一首音乐。</li></ul></li></ol><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p></p><p>关键特性：</p><ul><li><strong>动态内容生成</strong>：使用 <code>ForEach</code> 循环从音乐列表中动态生成音乐列表项。</li><li><strong>交互性</strong>：提供播放、暂停、切换音乐和删除音乐的功能。</li><li><strong>状态同步</strong>：实时更新播放状态、播放时长和播放列表，确保用户界面与音乐播放状态同步。</li></ul></div><p><img src="https://2024-cbq-1311841992.cos.ap-beijing.myqcloud.com/picgo/image-20240607112559515.png" alt="image-20240607112559515"></p><div class="caution custom-block github-alert"><p class="custom-block-title">CAUTION</p><p></p><ul><li>自定义播放控件</li><li>实时渲染当前播放音乐信息</li></ul></div><h2 id="_2-4-动态页面" tabindex="-1">2.4 动态页面 <a class="header-anchor" href="#_2-4-动态页面" aria-label="Permalink to &quot;2.4 动态页面&quot;">​</a></h2><p><code>MomentPage</code> 是一个用于展示音乐互动广场的页面组件。它通过展示用户动态和相关音乐，提供了一个社交互动的平台。用户可以浏览动态、播放音乐、分享和评论。</p><ol><li><strong>音乐播放控制 (<code>playerCardBuilder</code>)</strong><ul><li>在每个动态项中嵌入音乐播放控制卡，显示音乐封面、名称和作者。</li><li>根据当前播放状态显示不同的播放按钮（播放或暂停）。</li></ul></li><li><strong>动态列表 (<code>musicListBuilder</code>)</strong><ul><li>使用 <code>List</code> 和 <code>ListItem</code> 组件展示动态列表。</li><li>每个动态项包含用户头像、作者、内容、音乐播放卡以及分享、评论和点赞的统计信息。</li><li>使用 <code>ForEach</code> 循环从动态列表中动态生成动态项。</li></ul></li></ol><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p></p><p>关键特性：</p><ul><li><strong>动态内容生成</strong>：使用 <code>ForEach</code> 循环从动态列表中动态生成动态项。</li><li><strong>交互性</strong>：提供播放音乐的功能，并根据当前播放状态显示不同的播放按钮。</li><li><strong>社交互动</strong>：展示动态的分享、评论和点赞统计，增强用户之间的互动。</li></ul></div><p><img src="https://2024-cbq-1311841992.cos.ap-beijing.myqcloud.com/picgo/image-20240607112740220.png" alt="image-20240607112740220"></p>',30),d=[c];function a(r,s,u,n,g,p){return o(),i("div",null,d)}const b=l(t,[["render",a]]);export{h as __pageData,b as default};
